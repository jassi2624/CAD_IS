/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cad_is;

import AppPackage.AnimationClass;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Frame;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.LayoutManager;
import java.awt.List;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.animation.Animation;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.netbeans.lib.awtextra.AbsoluteLayout;

/**
 *
 * @author Dell G5
 */
public class First_Interface extends javax.swing.JFrame {
    
    private String groupRadioSelection1;
    private String groupRadioSelection2;
  
    
   
 
    /**
     * Creates new form First_Interface
     */
   
    
    public First_Interface() {
        initComponents();
        selection();
        groupRadioSelection1="";
        groupRadioSelection2="";
        try{
            this.refreshMyData((DefaultTableModel) this.homeTable.getModel());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        this.decorateMyTables(homeTable);
        this.decorateMyTables(searchTable);
       
        
        AnimationClass Ac = new AnimationClass();
       
           Ac.jButtonXRight(-300,0, 4, 2, p1);
           Ac.jButtonXRight(-300,0, 4, 2, p2);
           Ac.jButtonXRight(-300,0, 4, 2, p3);
           Ac.jButtonXRight(-300,0, 4, 2, p4);
           Ac.jButtonXRight(-300,0, 4, 2, p7);
           Ac.jLabelXRight(-300,0, 4, 2, dash);
           Ac.jLabelXRight(30,300, 4, 2, l1);
           
           
           Ac.jLabelYDown(-60, 60, 10, 2, homeLabel);
        
            panel2.setVisible(false);
            panel3.setVisible(false);
            panel4.setVisible(false);
            panel5.setVisible(false);
            panel6.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        kGradientPanel8 = new keeptoo.KGradientPanel();
        btnMenu = new keeptoo.KButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        plnMenu = new javax.swing.JPanel();
        kGradientPanel9 = new keeptoo.KGradientPanel();
        p2 = new keeptoo.KButton();
        p4 = new keeptoo.KButton();
        p3 = new keeptoo.KButton();
        s1 = new javax.swing.JSeparator();
        dash = new javax.swing.JLabel();
        p1 = new keeptoo.KButton();
        p5 = new keeptoo.KButton();
        p6 = new keeptoo.KButton();
        p7 = new keeptoo.KButton();
        l1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        panel1 = new javax.swing.JPanel();
        enclosedPanel = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        kGradientPanel1 = new keeptoo.KGradientPanel();
        jPanel12 = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        homeTable = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        panel2 = new javax.swing.JPanel();
        enclosedPanel1 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jPanel13 = new javax.swing.JPanel();
        kGradientPanel10 = new keeptoo.KGradientPanel();
        jPanel14 = new javax.swing.JPanel();
        homeLabel1 = new javax.swing.JLabel();
        InventoryPanel = new keeptoo.KGradientPanel();
        panel3 = new javax.swing.JPanel();
        enclosedPanel2 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jPanel16 = new javax.swing.JPanel();
        kGradientPanel11 = new keeptoo.KGradientPanel();
        jPanel17 = new javax.swing.JPanel();
        homeLabel2 = new javax.swing.JLabel();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        price = new javax.swing.JTextField();
        cato = new javax.swing.JComboBox();
        id = new javax.swing.JTextField();
        bg1 = new javax.swing.JRadioButton();
        bg2 = new javax.swing.JRadioButton();
        bg3 = new javax.swing.JRadioButton();
        name = new javax.swing.JTextField();
        bg4 = new javax.swing.JRadioButton();
        bg5 = new javax.swing.JRadioButton();
        bg6 = new javax.swing.JRadioButton();
        panel4 = new javax.swing.JPanel();
        enclosedPanel7 = new javax.swing.JPanel();
        jScrollPane16 = new javax.swing.JScrollPane();
        jPanel31 = new javax.swing.JPanel();
        kGradientPanel16 = new keeptoo.KGradientPanel();
        jPanel32 = new javax.swing.JPanel();
        homeLabel3 = new javax.swing.JLabel();
        kGradientPanel5 = new keeptoo.KGradientPanel();
        jLabel17 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        searchLabel = new javax.swing.JLabel();
        searchCombo = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        priceSearch = new javax.swing.JTextField();
        hidePanel = new javax.swing.JLabel();
        categorySearch = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        panel5 = new javax.swing.JPanel();
        enclosedPanel4 = new javax.swing.JPanel();
        jScrollPane13 = new javax.swing.JScrollPane();
        jPanel22 = new javax.swing.JPanel();
        kGradientPanel13 = new keeptoo.KGradientPanel();
        jPanel23 = new javax.swing.JPanel();
        homeLabel4 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        panel6 = new javax.swing.JPanel();
        enclosedPanel5 = new javax.swing.JPanel();
        jScrollPane14 = new javax.swing.JScrollPane();
        jPanel25 = new javax.swing.JPanel();
        kGradientPanel14 = new keeptoo.KGradientPanel();
        jPanel26 = new javax.swing.JPanel();
        homeLabel5 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CAD_IS");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 97, 210));
        jPanel1.setLayout(new javax.swing.OverlayLayout(jPanel1));

        kGradientPanel8.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel8.setkStartColor(new java.awt.Color(0, 0, 255));

        btnMenu.setBorder(null);
        btnMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_menu_50px_6.png"))); // NOI18N
        btnMenu.setToolTipText("");
        btnMenu.setAlignmentX(1.0F);
        btnMenu.setAlignmentY(1.0F);
        btnMenu.setBorderPainted(false);
        btnMenu.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnMenu.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        btnMenu.setkBackGroundColor(new java.awt.Color(0, 97, 210));
        btnMenu.setkBorderRadius(0);
        btnMenu.setkEndColor(new java.awt.Color(0, 97, 210));
        btnMenu.setkFillButton(false);
        btnMenu.setkHoverEndColor(new java.awt.Color(153, 153, 255));
        btnMenu.setkHoverForeGround(new java.awt.Color(102, 102, 255));
        btnMenu.setkHoverStartColor(new java.awt.Color(0, 97, 210));
        btnMenu.setkIndicatorThickness(0);
        btnMenu.setkPressedColor(new java.awt.Color(0, 97, 210));
        btnMenu.setkSelectedColor(new java.awt.Color(0, 97, 210));
        btnMenu.setkStartColor(new java.awt.Color(0, 97, 210));
        btnMenu.setMargin(new java.awt.Insets(0, 2, 10, 4));
        btnMenu.setOpaque(false);
        btnMenu.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        btnMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMenuActionPerformed(evt);
            }
        });

        jPanel11.setOpaque(false);
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("CAD_IS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.ipady = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 338, 4, 413);
        jPanel11.add(jLabel1, gridBagConstraints);

        javax.swing.GroupLayout kGradientPanel8Layout = new javax.swing.GroupLayout(kGradientPanel8);
        kGradientPanel8.setLayout(kGradientPanel8Layout);
        kGradientPanel8Layout.setHorizontalGroup(
            kGradientPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel8Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        kGradientPanel8Layout.setVerticalGroup(
            kGradientPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(kGradientPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(kGradientPanel8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 197;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.4;
        getContentPane().add(jPanel1, gridBagConstraints);

        plnMenu.setBackground(new java.awt.Color(204, 204, 204));
        plnMenu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 255), new java.awt.Color(0, 0, 153), new java.awt.Color(204, 204, 255), new java.awt.Color(102, 102, 255)));
        plnMenu.setLayout(new javax.swing.OverlayLayout(plnMenu));

        kGradientPanel9.setkEndColor(new java.awt.Color(0, 0, 153));
        kGradientPanel9.setkStartColor(new java.awt.Color(255, 255, 204));
        kGradientPanel9.setLayout(null);

        p2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_trolley_24px_2.png"))); // NOI18N
        p2.setText("INVENTORY");
        p2.setAlignmentX(0.5F);
        p2.setFocusCycleRoot(true);
        p2.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        p2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        p2.setIconTextGap(10);
        p2.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p2.setkBorderRadius(0);
        p2.setkEndColor(new java.awt.Color(0, 0, 51));
        p2.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p2.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p2.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p2.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p2.setkIndicatorThickness(10);
        p2.setkPressedColor(new java.awt.Color(0, 255, 51));
        p2.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p2.setkStartColor(new java.awt.Color(0, 97, 210));
        p2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p2ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p2);
        p2.setBounds(-300, 220, 300, 40);
        p2.getAccessibleContext().setAccessibleDescription("");

        p4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_search_24px.png"))); // NOI18N
        p4.setText("SEARCH");
        p4.setFocusCycleRoot(true);
        p4.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p4.setIconTextGap(10);
        p4.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p4.setkBorderRadius(0);
        p4.setkEndColor(new java.awt.Color(0, 0, 51));
        p4.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p4.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p4.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p4.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p4.setkIndicatorThickness(10);
        p4.setkPressedColor(new java.awt.Color(0, 255, 51));
        p4.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p4.setkStartColor(new java.awt.Color(0, 97, 210));
        p4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p4ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p4);
        p4.setBounds(-300, 320, 300, 40);

        p3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_add_24px.png"))); // NOI18N
        p3.setText("ADD");
        p3.setFocusCycleRoot(true);
        p3.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p3.setIconTextGap(10);
        p3.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p3.setkBorderRadius(0);
        p3.setkEndColor(new java.awt.Color(0, 0, 51));
        p3.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p3.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p3.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p3.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p3.setkIndicatorThickness(10);
        p3.setkPressedColor(new java.awt.Color(0, 255, 51));
        p3.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p3.setkStartColor(new java.awt.Color(0, 97, 210));
        p3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p3ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p3);
        p3.setBounds(-300, 270, 300, 40);

        s1.setForeground(new java.awt.Color(0, 0, 153));
        kGradientPanel9.add(s1);
        s1.setBounds(0, 97, 328, 21);

        dash.setFont(new java.awt.Font("Cooper Black", 1, 24)); // NOI18N
        dash.setForeground(new java.awt.Color(0, 0, 153));
        dash.setText("   CONTROL PANEL");
        dash.setName(""); // NOI18N
        kGradientPanel9.add(dash);
        dash.setBounds(-300, 30, 300, 60);

        p1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_home_24px_2.png"))); // NOI18N
        p1.setText("HOME");
        p1.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p1.setIconTextGap(10);
        p1.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p1.setkBorderRadius(0);
        p1.setkEndColor(new java.awt.Color(0, 0, 51));
        p1.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p1.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p1.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p1.setkIndicatorThickness(10);
        p1.setkPressedColor(new java.awt.Color(0, 255, 51));
        p1.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p1.setkStartColor(new java.awt.Color(0, 97, 210));
        p1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p1ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p1);
        p1.setBounds(-300, 170, 300, 40);

        p5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_help_30px.png"))); // NOI18N
        p5.setText("HELP");
        p5.setFocusCycleRoot(true);
        p5.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p5.setIconTextGap(10);
        p5.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p5.setkBorderRadius(0);
        p5.setkEndColor(new java.awt.Color(0, 0, 51));
        p5.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p5.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p5.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p5.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p5.setkIndicatorThickness(10);
        p5.setkPressedColor(new java.awt.Color(0, 255, 51));
        p5.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p5.setkStartColor(new java.awt.Color(0, 97, 210));
        p5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p5ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p5);
        p5.setBounds(-300, 460, 300, 40);

        p6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_about_30px.png"))); // NOI18N
        p6.setText("ABOUT");
        p6.setFocusCycleRoot(true);
        p6.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p6.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p6.setIconTextGap(10);
        p6.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p6.setkBorderRadius(0);
        p6.setkEndColor(new java.awt.Color(0, 0, 51));
        p6.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p6.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p6.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p6.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p6.setkIndicatorThickness(10);
        p6.setkPressedColor(new java.awt.Color(0, 255, 51));
        p6.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p6.setkStartColor(new java.awt.Color(0, 97, 210));
        p6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p6ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p6);
        p6.setBounds(-300, 510, 300, 40);

        p7.setBackground(new java.awt.Color(0, 0, 51));
        p7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_services_24px_2.png"))); // NOI18N
        p7.setText("Customer Care ");
        p7.setFocusCycleRoot(true);
        p7.setFont(new java.awt.Font("SansSerif", 1, 20)); // NOI18N
        p7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p7.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        p7.setIconTextGap(10);
        p7.setkAllowTab(false);
        p7.setkBackGroundColor(new java.awt.Color(0, 0, 51));
        p7.setkBorderRadius(0);
        p7.setkEndColor(new java.awt.Color(0, 0, 51));
        p7.setkHoverEndColor(new java.awt.Color(204, 204, 204));
        p7.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        p7.setkHoverStartColor(new java.awt.Color(153, 153, 255));
        p7.setkIndicatorColor(new java.awt.Color(204, 0, 0));
        p7.setkIndicatorThickness(0);
        p7.setkPressedColor(new java.awt.Color(0, 255, 51));
        p7.setkSelectedColor(new java.awt.Color(0, 97, 210));
        p7.setkStartColor(new java.awt.Color(0, 97, 210));
        p7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p7ActionPerformed(evt);
            }
        });
        kGradientPanel9.add(p7);
        p7.setBounds(-300, 400, 300, 40);

        l1.setBackground(new java.awt.Color(255, 255, 255));
        l1.setForeground(new java.awt.Color(0, 0, 204));
        l1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NEW.png"))); // NOI18N
        l1.setToolTipText("");
        l1.setIconTextGap(0);
        kGradientPanel9.add(l1);
        l1.setBounds(30, 100, 240, 480);

        plnMenu.add(kGradientPanel9);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 274;
        gridBagConstraints.ipady = 189;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 0.8;
        gridBagConstraints.insets = new java.awt.Insets(102, 1, 0, 0);
        getContentPane().add(plnMenu, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new javax.swing.OverlayLayout(jPanel4));

        panel1.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel1.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel1.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel12.setOpaque(false);
        jPanel12.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel12.setLayout(null);

        homeLabel.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel.setText("HOME");
        homeLabel.setAlignmentX(0.5F);
        homeLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel12.add(homeLabel);
        homeLabel.setBounds(10, 60, 110, 28);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 166;
        gridBagConstraints.ipady = 116;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 426, 0, 415);
        kGradientPanel1.add(jPanel12, gridBagConstraints);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setForeground(new java.awt.Color(153, 204, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(new java.awt.Font("Action Man Extended", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setText("CAR ACCESSORIES DETAILS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 197, 30, 173);
        jPanel2.add(jLabel8, gridBagConstraints);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jScrollPane6.setOpaque(false);

        homeTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        homeTable.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        homeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accessory_id", "Category", "Name", "Range", "Price", "Recommendation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        homeTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        homeTable.setFocusable(false);
        homeTable.setGridColor(new java.awt.Color(255, 255, 255));
        homeTable.setOpaque(false);
        homeTable.setRowHeight(23);
        homeTable.setRowMargin(0);
        homeTable.setShowHorizontalLines(false);
        homeTable.setShowVerticalLines(false);
        jScrollPane6.setViewportView(homeTable);
        if (homeTable.getColumnModel().getColumnCount() > 0) {
            homeTable.getColumnModel().getColumn(0).setResizable(false);
            homeTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            homeTable.getColumnModel().getColumn(1).setResizable(false);
            homeTable.getColumnModel().getColumn(1).setPreferredWidth(80);
            homeTable.getColumnModel().getColumn(2).setResizable(false);
            homeTable.getColumnModel().getColumn(2).setPreferredWidth(80);
            homeTable.getColumnModel().getColumn(3).setResizable(false);
            homeTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            homeTable.getColumnModel().getColumn(4).setResizable(false);
            homeTable.getColumnModel().getColumn(4).setPreferredWidth(110);
            homeTable.getColumnModel().getColumn(5).setResizable(false);
            homeTable.getColumnModel().getColumn(5).setPreferredWidth(350);
        }

        jButton3.setBackground(new java.awt.Color(0, 0, 204));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("EDIT");
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 0, 204));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Refresh");
        jButton5.setFocusPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jScrollPane6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1046, Short.MAX_VALUE)
                            .addComponent(kGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addGap(127, 127, 127))
        );

        jScrollPane3.setViewportView(jPanel3);

        javax.swing.GroupLayout enclosedPanelLayout = new javax.swing.GroupLayout(enclosedPanel);
        enclosedPanel.setLayout(enclosedPanelLayout);
        enclosedPanelLayout.setHorizontalGroup(
            enclosedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, enclosedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1093, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanelLayout.setVerticalGroup(
            enclosedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel1);

        panel2.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel1.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setForeground(new java.awt.Color(255, 255, 102));

        kGradientPanel10.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel10.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel14.setOpaque(false);
        jPanel14.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel14.setLayout(null);

        homeLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel1.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel1.setText("INVENTORY");
        homeLabel1.setAlignmentX(0.5F);
        homeLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel14.add(homeLabel1);
        homeLabel1.setBounds(10, -60, 190, 28);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 217;
        gridBagConstraints.ipady = 94;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 402, 13, 402);
        kGradientPanel10.add(jPanel14, gridBagConstraints);

        InventoryPanel.setkEndColor(new java.awt.Color(204, 255, 204));
        InventoryPanel.setkStartColor(new java.awt.Color(204, 204, 255));
        InventoryPanel.setLayout(new javax.swing.BoxLayout(InventoryPanel, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 1022, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(InventoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 752, Short.MAX_VALUE)
                .addGap(137, 137, 137))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(InventoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addGap(200, 200, 200))
        );

        jScrollPane10.setViewportView(jPanel13);

        javax.swing.GroupLayout enclosedPanel1Layout = new javax.swing.GroupLayout(enclosedPanel1);
        enclosedPanel1.setLayout(enclosedPanel1Layout);
        enclosedPanel1Layout.setHorizontalGroup(
            enclosedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanel1Layout.setVerticalGroup(
            enclosedPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel2Layout = new javax.swing.GroupLayout(panel2);
        panel2.setLayout(panel2Layout);
        panel2Layout.setHorizontalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel2Layout.setVerticalGroup(
            panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel2);

        panel3.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel2.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel11.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel11.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel17.setOpaque(false);
        jPanel17.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel17.setLayout(null);

        homeLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel2.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel2.setText("ADD");
        homeLabel2.setAlignmentX(0.5F);
        homeLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel17.add(homeLabel2);
        homeLabel2.setBounds(10, -60, 120, 28);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 176;
        gridBagConstraints.ipady = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 441, 0, 457);
        kGradientPanel11.add(jPanel17, gridBagConstraints);

        kGradientPanel2.setForeground(new java.awt.Color(255, 255, 255));
        kGradientPanel2.setkEndColor(new java.awt.Color(51, 51, 0));
        kGradientPanel2.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel2.setOpaque(false);
        kGradientPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("ADD  NEW ACCESSORY HERE!!");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 18;
        gridBagConstraints.ipadx = 47;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 289, 0, 0);
        kGradientPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Accessory_ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 46;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 185, 0, 0);
        kGradientPanel2.add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 71;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 185, 0, 0);
        kGradientPanel2.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Accessory Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(35, 185, 0, 0);
        kGradientPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Range");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 86;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 185, 0, 0);
        kGradientPanel2.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 94;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(46, 186, 0, 0);
        kGradientPanel2.add(jLabel7, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Recomended By");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 186, 0, 0);
        kGradientPanel2.add(jLabel15, gridBagConstraints);

        jButton1.setBackground(new java.awt.Color(0, 51, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_add_50px_1.png"))); // NOI18N
        jButton1.setText("ADD");
        jButton1.setBorder(null);
        jButton1.setFocusPainted(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 187, 25, 0);
        kGradientPanel2.add(jButton1, gridBagConstraints);

        jButton2.setBackground(new java.awt.Color(0, 51, 255));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_delete_50px.png"))); // NOI18N
        jButton2.setText("CLEAR");
        jButton2.setBorder(null);
        jButton2.setFocusPainted(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 41;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = -9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 95, 25, 145);
        kGradientPanel2.add(jButton2, gridBagConstraints);

        price.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 25;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 212;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(41, 16, 0, 0);
        kGradientPanel2.add(price, gridBagConstraints);

        cato.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Category>", "Media", "Comfort", "Decorative", "Cleaning", "Oils & Lubricants", "Others" }));
        cato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 29;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 67;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 29, 0, 0);
        kGradientPanel2.add(cato, gridBagConstraints);

        id.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 29;
        gridBagConstraints.ipadx = 208;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 29, 0, 0);
        kGradientPanel2.add(id, gridBagConstraints);

        buttonGroup1.add(bg1);
        bg1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg1.setForeground(new java.awt.Color(255, 255, 255));
        bg1.setText("High");
        bg1.setFocusable(false);
        bg1.setOpaque(false);
        bg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 0, 0, 0);
        kGradientPanel2.add(bg1, gridBagConstraints);

        buttonGroup1.add(bg2);
        bg2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg2.setForeground(new java.awt.Color(255, 255, 255));
        bg2.setText("Medium");
        bg2.setFocusable(false);
        bg2.setOpaque(false);
        bg2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 18, 0, 0);
        kGradientPanel2.add(bg2, gridBagConstraints);

        buttonGroup1.add(bg3);
        bg3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg3.setForeground(new java.awt.Color(255, 255, 255));
        bg3.setText("Low");
        bg3.setFocusable(false);
        bg3.setOpaque(false);
        bg3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 17;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 19;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(34, 18, 0, 0);
        kGradientPanel2.add(bg3, gridBagConstraints);

        name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 11;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 29;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 212;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 25, 0, 0);
        kGradientPanel2.add(name, gridBagConstraints);

        buttonGroup2.add(bg4);
        bg4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg4.setForeground(new java.awt.Color(255, 255, 255));
        bg4.setText("Not Recommended Yet");
        bg4.setFocusable(false);
        bg4.setOpaque(false);
        bg4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 40;
        gridBagConstraints.ipadx = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 6, 0, 0);
        kGradientPanel2.add(bg4, gridBagConstraints);

        buttonGroup2.add(bg5);
        bg5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg5.setForeground(new java.awt.Color(255, 255, 255));
        bg5.setText("Recommended By Company");
        bg5.setFocusable(false);
        bg5.setOpaque(false);
        bg5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 60;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(28, 6, 0, 145);
        kGradientPanel2.add(bg5, gridBagConstraints);

        buttonGroup2.add(bg6);
        bg6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        bg6.setForeground(new java.awt.Color(255, 255, 255));
        bg6.setText("Recommended By Community/Users");
        bg6.setFocusable(false);
        bg6.setOpaque(false);
        bg6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bg6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 52;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 6, 0, 145);
        kGradientPanel2.add(bg6, gridBagConstraints);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, 1075, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(131, 131, 131)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 767, Short.MAX_VALUE)
                .addGap(201, 201, 201))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(kGradientPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(107, Short.MAX_VALUE))
        );

        jScrollPane11.setViewportView(jPanel16);

        javax.swing.GroupLayout enclosedPanel2Layout = new javax.swing.GroupLayout(enclosedPanel2);
        enclosedPanel2.setLayout(enclosedPanel2Layout);
        enclosedPanel2Layout.setHorizontalGroup(
            enclosedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanel2Layout.setVerticalGroup(
            enclosedPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel3Layout = new javax.swing.GroupLayout(panel3);
        panel3.setLayout(panel3Layout);
        panel3Layout.setHorizontalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel3Layout.setVerticalGroup(
            panel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel3);

        panel4.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel7.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel7.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel16.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel16.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel16.setLayout(new java.awt.GridBagLayout());

        jPanel32.setOpaque(false);
        jPanel32.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel32.setLayout(null);

        homeLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel3.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel3.setText("SEARCH");
        homeLabel3.setAlignmentX(0.5F);
        homeLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel32.add(homeLabel3);
        homeLabel3.setBounds(10, 60, 140, 28);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 202;
        gridBagConstraints.ipady = 115;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 435, 0, 384);
        kGradientPanel16.add(jPanel32, gridBagConstraints);

        kGradientPanel5.setkEndColor(new java.awt.Color(0, 0, 0));
        kGradientPanel5.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("SEARCH BY:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 40, 0, 0);
        kGradientPanel5.add(jLabel17, gridBagConstraints);

        jButton4.setBackground(new java.awt.Color(0, 51, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_search_24px.png"))); // NOI18N
        jButton4.setText("SEARCH");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 5));
        jButton4.setBorderPainted(false);
        jButton4.setFocusPainted(false);
        jButton4.setFocusable(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 58;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 12, 34, 95);
        kGradientPanel5.add(jButton4, gridBagConstraints);

        searchLabel.setFont(new java.awt.Font("Sylfaen", 1, 12)); // NOI18N
        searchLabel.setForeground(new java.awt.Color(255, 255, 255));
        searchLabel.setText("You can Search Accessories on the basis of Price & Category");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = -4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 65, 0, 0);
        kGradientPanel5.add(searchLabel, gridBagConstraints);

        searchCombo.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        searchCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Select Item>", "Price", "Category" }));
        searchCombo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 255), 3, true));
        searchCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                searchComboItemStateChanged(evt);
            }
        });
        searchCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchComboActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = -3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 5, 0, 0);
        kGradientPanel5.add(searchCombo, gridBagConstraints);

        jPanel6.setOpaque(false);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        priceSearch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        priceSearch.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        priceSearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 255), 3));
        priceSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceSearchActionPerformed(evt);
            }
        });
        jPanel6.add(priceSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 250, 30));

        hidePanel.setBackground(new java.awt.Color(0, 0, 102));
        hidePanel.setOpaque(true);
        jPanel6.add(hidePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 250, 30));

        categorySearch.setFont(new java.awt.Font("Lucida Calligraphy", 1, 14)); // NOI18N
        categorySearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Media", "Comfort", "Decorative", "Cleaning", "Oils & Lubricants", "Others" }));
        categorySearch.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 3));
        categorySearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorySearchActionPerformed(evt);
            }
        });
        jPanel6.add(categorySearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 250, 30));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = -261;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 7, 34, 0);
        kGradientPanel5.add(jPanel6, gridBagConstraints);

        jScrollPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jScrollPane4.setOpaque(false);

        searchTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        searchTable.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Accessory_id", "Category", "Name", "Range", "Price", "Recommendation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Long.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchTable.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        searchTable.setGridColor(new java.awt.Color(255, 255, 255));
        searchTable.setOpaque(false);
        searchTable.setRowHeight(23);
        searchTable.setShowHorizontalLines(false);
        searchTable.setShowVerticalLines(false);
        jScrollPane4.setViewportView(searchTable);
        searchTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (searchTable.getColumnModel().getColumnCount() > 0) {
            searchTable.getColumnModel().getColumn(0).setResizable(false);
            searchTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            searchTable.getColumnModel().getColumn(1).setResizable(false);
            searchTable.getColumnModel().getColumn(1).setPreferredWidth(80);
            searchTable.getColumnModel().getColumn(2).setResizable(false);
            searchTable.getColumnModel().getColumn(2).setPreferredWidth(80);
            searchTable.getColumnModel().getColumn(3).setResizable(false);
            searchTable.getColumnModel().getColumn(3).setPreferredWidth(80);
            searchTable.getColumnModel().getColumn(4).setResizable(false);
            searchTable.getColumnModel().getColumn(4).setPreferredWidth(110);
            searchTable.getColumnModel().getColumn(5).setResizable(false);
            searchTable.getColumnModel().getColumn(5).setPreferredWidth(350);
        }

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, 1022, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4)
                    .addComponent(kGradientPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 834, Short.MAX_VALUE))
                .addGap(94, 94, 94))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(kGradientPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        jScrollPane16.setViewportView(jPanel31);

        javax.swing.GroupLayout enclosedPanel7Layout = new javax.swing.GroupLayout(enclosedPanel7);
        enclosedPanel7.setLayout(enclosedPanel7Layout);
        enclosedPanel7Layout.setHorizontalGroup(
            enclosedPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanel7Layout.setVerticalGroup(
            enclosedPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane16, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel4Layout = new javax.swing.GroupLayout(panel4);
        panel4.setLayout(panel4Layout);
        panel4Layout.setHorizontalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel4Layout.setVerticalGroup(
            panel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel4);

        panel5.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel4.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel4.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel13.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel13.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel13.setLayout(new java.awt.GridBagLayout());

        jPanel23.setOpaque(false);
        jPanel23.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel23.setLayout(null);

        homeLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel4.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel4.setText("HELP");
        homeLabel4.setAlignmentX(0.5F);
        homeLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel23.add(homeLabel4);
        homeLabel4.setBounds(67, -60, 120, 30);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 244;
        gridBagConstraints.ipady = 165;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 413, 0, 350);
        kGradientPanel13.add(jPanel23, gridBagConstraints);

        jScrollPane1.setAutoscrolls(true);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("HOME panel : used for updating, editiond and evaluating the available data.\nInventory Panel: displays the bar-chart based on the quntity of the Categories available.\nAdd Panel: new data can be Added to the data file here.\nSearch Panel: Data can be Searched based on category and Price.\nCustomer Care consists of two different Panels\n1. Help Panel and 2. About Panel\n\nNote: \nThe data file can be opened using Shortcut key (Ctrl+O).\nThe help Panel can be opened using Shortcut key (Ctrl+H).\nThe About Panel can be opened using Shortcut key (Ctrl+D).\nThe program can be terminated using Shortcut key (Ctrl+E).\n");
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addGap(46, 46, 46))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(kGradientPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(41, 41, 41))))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane13.setViewportView(jPanel22);

        javax.swing.GroupLayout enclosedPanel4Layout = new javax.swing.GroupLayout(enclosedPanel4);
        enclosedPanel4.setLayout(enclosedPanel4Layout);
        enclosedPanel4Layout.setHorizontalGroup(
            enclosedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanel4Layout.setVerticalGroup(
            enclosedPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel5Layout = new javax.swing.GroupLayout(panel5);
        panel5.setLayout(panel5Layout);
        panel5Layout.setHorizontalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel5Layout.setVerticalGroup(
            panel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel5);

        panel6.setBackground(new java.awt.Color(255, 255, 255));

        enclosedPanel5.setBackground(new java.awt.Color(204, 204, 204));
        enclosedPanel5.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 7, true), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 255), new java.awt.Color(0, 0, 204), new java.awt.Color(204, 204, 255), new java.awt.Color(153, 153, 255))));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        kGradientPanel14.setkEndColor(new java.awt.Color(51, 0, 0));
        kGradientPanel14.setkStartColor(new java.awt.Color(0, 0, 255));
        kGradientPanel14.setLayout(new java.awt.GridBagLayout());

        jPanel26.setOpaque(false);
        jPanel26.setPreferredSize(new java.awt.Dimension(229, 165));
        jPanel26.setLayout(null);

        homeLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        homeLabel5.setForeground(new java.awt.Color(255, 255, 255));
        homeLabel5.setText("ABOUT");
        homeLabel5.setAlignmentX(0.5F);
        homeLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel26.add(homeLabel5);
        homeLabel5.setBounds(10, -60, 130, 28);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 158;
        gridBagConstraints.ipady = 124;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 461, 13, 388);
        kGradientPanel14.add(jPanel26, gridBagConstraints);

        jScrollPane2.setAutoscrolls(true);

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("This system focus is to make it more user interactive or user-friendly, simple and easy to use even with minimum knowledge.\nIt also focuses on improving the quality of the services provided by the company by digitizing the traditionally \nused paper-based system into advanced computer-based system. Inside this system or application there are different\npanels for inserting, searching, sorting the data. First, there is a panel named as “ADD” where users or customers \ncan add or insert the new items or car accessories they want to order. For this, they have to provide the accessory id, accessory name, \nits category, range level, price and recommendation if any. Then after clicking add button the data will be added into the list or the table. \nSecond panel is about searching the newly inserted data or checking the old data.\n The panel is named as “SEARCH” where users or customers can search different data that are in the list based on either their price or category.\n The system then sorts the given data and throws or provide the first one among them of certain category or price level.\n In addition, for searching the system is using the binary search algorithm for the searching process. \nThis application also provides the detail use of different classes and components that are available in JAVA programming language. \nFor the development of this application, we have also used different components like text fields, labels, radio buttons, combo boxes, etc. \nfor easy usability of this system or application.");
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addComponent(jScrollPane2)
                .addGap(46, 46, 46))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kGradientPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                    .addGroup(jPanel25Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(50, 50, 50)))
                .addContainerGap())
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(kGradientPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane14.setViewportView(jPanel25);

        javax.swing.GroupLayout enclosedPanel5Layout = new javax.swing.GroupLayout(enclosedPanel5);
        enclosedPanel5.setLayout(enclosedPanel5Layout);
        enclosedPanel5Layout.setHorizontalGroup(
            enclosedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 1008, Short.MAX_VALUE)
                .addContainerGap())
        );
        enclosedPanel5Layout.setVerticalGroup(
            enclosedPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(enclosedPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane14, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout panel6Layout = new javax.swing.GroupLayout(panel6);
        panel6.setLayout(panel6Layout);
        panel6Layout.setHorizontalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel6Layout.setVerticalGroup(
            panel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(enclosedPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.add(panel6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        getContentPane().add(jPanel4, gridBagConstraints);

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_file_18px.png"))); // NOI18N
        jMenu1.setText("File");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_opened_folder_18px_1.png"))); // NOI18N
        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_shutdown_18px.png"))); // NOI18N
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_info_18px.png"))); // NOI18N
        jMenu2.setText("Help");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_user_manual_18px.png"))); // NOI18N
        jMenuItem1.setText("User Manual");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_workspace_18px.png"))); // NOI18N
        jMenuItem4.setText("About Developers");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void p7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p7ActionPerformed
        // TODO add your handling code here:
        int position = this.p6.getX();
        AnimationClass Ac = new AnimationClass();

        if(position>-1){

            Ac.jButtonXLeft(0,-300, 2, 2, p5);
            Ac.jButtonXLeft(0,-300, 2, 2, p6);

        }else {

            Ac.jButtonXRight(-300,0, 2, 2, p5);
            Ac.jButtonXRight(-300,0, 2, 2, p6);

        }

    }//GEN-LAST:event_p7ActionPerformed

    private void p6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p6ActionPerformed
        // TODO add your handling code here:panel1.setVisible(false);
       this.animateMe(panel6,homeLabel5);
           

    }//GEN-LAST:event_p6ActionPerformed

    private void p5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p5ActionPerformed
        // TODO add your handling code here:
        this.animateMe(panel5,homeLabel4);
    }//GEN-LAST:event_p5ActionPerformed

    private void p4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p4ActionPerformed
        // TODO add your handling code here:
        this.animateMe(panel4, homeLabel3);
    }//GEN-LAST:event_p4ActionPerformed

    private void p1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p1ActionPerformed
        // TODO add your handling code here:]AnimationClass Ac = new AnimationClass(
        this.animateMe(panel1, homeLabel);
        try {
            this.refreshMyData((DefaultTableModel) homeTable.getModel());
        } catch (IOException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_p1ActionPerformed

    private void p3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p3ActionPerformed
        // TODO add your handling code here:
        this.animateMe(panel3, homeLabel2);
    }//GEN-LAST:event_p3ActionPerformed

    private void p2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p2ActionPerformed
        // TODO add your handling code here:
        
        ArrayList qty = new ArrayList();
        this.animateMe(panel2, homeLabel1);
            
            qty= this.homeTableData();
            int q1= Integer.parseInt(qty.get(0).toString());
            int q2= Integer.parseInt(qty.get(1).toString());
            int q3= Integer.parseInt(qty.get(2).toString());
            int q4= Integer.parseInt(qty.get(3).toString());
            int q5= Integer.parseInt(qty.get(4).toString());
            int q6= Integer.parseInt(qty.get(5).toString());
            
            
           
            
            
            DefaultCategoryDataset dcd = new DefaultCategoryDataset();
            dcd.setValue(q1, "Quantity", "Media ="+q1);
            dcd.setValue(q2, "Quantity", "Comfort ="+q2);
            dcd.setValue(q3, "Quantity", "Decorative ="+q3);
            dcd.setValue(q4, "Quantity", "Cleaning ="+q4);
            dcd.setValue(q5, "Quantity", "Oils & Lubricants ="+q5);
            dcd.setValue(q6, "Quantity", "Others ="+q6);
            
            
            JFreeChart jchart  = ChartFactory.createBarChart3D("Accessories Categories & thier Quntity ",
                    "Catogories","Quantity Of Catogories",dcd,PlotOrientation.VERTICAL,true,true,false);
            CategoryPlot plot = jchart.getCategoryPlot();
            plot.setRangeGridlinePaint(Color.black);
            
            ChartFrame chartFrm = new ChartFrame("Student Record",jchart,true);
            //chartFrm.setVisible(true);
            chartFrm.setSize(500,400);
            ChartPanel chartPanel = new ChartPanel(jchart);
             
            this.InventoryPanel.removeAll();
            this.InventoryPanel.add(chartPanel);
            this.InventoryPanel.updateUI();
    }//GEN-LAST:event_p2ActionPerformed

    private void priceSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceSearchActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // Code For Search Botton
      String selectedItem =this.searchCombo.getSelectedItem().toString();
        if(selectedItem=="Price"){ 
          try {
              this.searchByPrice();  //Calls searchByPrice Method
          } catch (IOException ex) {
              Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (BiffException ex) {
              Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
  
        }else if (selectedItem =="<Select Item>"){ 
            JOptionPane.showMessageDialog(InventoryPanel, "Please select Item first!");
        }else if (selectedItem == "Category"){
          try {
              this.searchByCategory(); //Calls searchByCategory Method
          } catch (IOException ex) {
              Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
          } catch (BiffException ex) {
              Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
          }
            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void categorySearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorySearchActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_categorySearchActionPerformed

    private void searchComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_searchComboItemStateChanged
        
        // Code for Animation when used Combo Box at Search Seaction
       String selectedItem =this.searchCombo.getSelectedItem().toString();
       AnimationClass Ac = new AnimationClass();
       if(selectedItem=="Price"){ 
           
           Ac.jTextFieldXLeft(260, 0, 10, 2, this.priceSearch);   
       }else if (selectedItem=="Category"){
           
           categorySearch.setVisible(true);
           Ac.jTextFieldXRight(0, 260, 10, 2, this.priceSearch);
           Ac.jLabelXRight(0, 260, 10, 2, this.hidePanel);
           this.priceSearch.setText("");
       }else{
           
           categorySearch.setVisible(false);
           Ac.jTextFieldXRight(0, 260, 10, 2, this.priceSearch);
           this.priceSearch.setText("");
          
       }
    }//GEN-LAST:event_searchComboItemStateChanged

    private void searchComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchComboActionPerformed

    private void btnMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMenuActionPerformed
        // Code for Animation
        int position = this.p1.getX();

        AnimationClass Ac = new AnimationClass();
        System.out.println("position is: "+position);
        if(position>-1){
            Ac.jButtonXLeft(0,-300, 2, 2, p1);
            Ac.jButtonXLeft(0,-300, 2, 2, p2);
            Ac.jButtonXLeft(0,-300, 2, 2, p3);
            Ac.jButtonXLeft(0,-300, 2, 2, p4);
            Ac.jButtonXLeft(0,-300, 2, 2, p7);
            Ac.jLabelXLeft(0,-300, 2, 2, dash);
            Ac.jButtonXLeft(0,-300, 2, 2, p5);
            Ac.jButtonXLeft(0,-300, 2, 2, p6);
            Ac.jLabelXLeft(300,30, 2, 2, l1);
            this.p1.setSelected(true);

        }else {
            Ac.jButtonXRight(-300,0, 2, 2, p1);
            Ac.jButtonXRight(-300,0, 2, 2, p2);
            Ac.jButtonXRight(-300,0, 2, 2, p3);
            Ac.jButtonXRight(-300,0, 2, 2, p4);
            Ac.jButtonXRight(-300,0, 2, 2, p7);
            Ac.jLabelXRight(30,300, 2, 2, l1);

            Ac.jLabelXRight(-300,0, 2, 2, dash);

        }
    }//GEN-LAST:event_btnMenuActionPerformed

    private void bg6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg6ActionPerformed
        // sets groupRadioSelection2 value to "Recommended By Community/Users"
        this.groupRadioSelection2 = "Recommended By Community/Users";
    }//GEN-LAST:event_bg6ActionPerformed

    private void bg5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg5ActionPerformed
        // sets groupRadioSelection2 value to "Recommended By Company"
        this.groupRadioSelection2 = "Recommended By Company";
    }//GEN-LAST:event_bg5ActionPerformed

    private void bg4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg4ActionPerformed
        // sets groupRadioSelection2 value to "Not Recommended Yet"
        this.groupRadioSelection2 = "Not Recommended Yet";
    }//GEN-LAST:event_bg4ActionPerformed

    private void bg3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg3ActionPerformed
        // TODO add your handling code here:
        this.groupRadioSelection1 = "Low";
    }//GEN-LAST:event_bg3ActionPerformed

    private void bg2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg2ActionPerformed
        // TODO add your handling code here:
        this.groupRadioSelection1 = "Medium";
    }//GEN-LAST:event_bg2ActionPerformed

    private void bg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bg1ActionPerformed
        // TODO add your handling code here:
        this.groupRadioSelection1 = "High";
    }//GEN-LAST:event_bg1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int ID=0;
        boolean found = false;    //  Specifies if the Accessory Id already Exists or not!!
        boolean exception = false;  // Specifies if the Input to the System is Correct or not/// Exception!!
        if (id.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "ID of Accessory Cannot be left Empty");
            exception=true; // True as ID is left Empty
        }else{
            try{
                ID= Integer.parseInt(id.getText());
            }catch(Exception NumberFormatException){
                JOptionPane.showMessageDialog(null, "ID of Accessory cannot be a String Value");
                exception=true; // True as Id is a String value
            }
        }
        if (exception==false){  // Trigered if there is no exception in input to the system.
            for(int i = 0;i<this.homeTable.getModel().getRowCount();i++){

                int oldID = Integer.parseInt(this.homeTable.getModel().getValueAt(i, 0).toString());
                if(ID==oldID){
                    found=true;

                }

            }

            if (found==false){  //Trigered if the id of data already stored, does not match input id of Accessory.
                this.AddDataToDataFile(ID,"Datafile//CAD_IS.xls");

            }else{
                JOptionPane.showMessageDialog(null, "ID :"+ID+" already Exits \n Please choose another ID.");
            }

        }

        try {
            this.refreshMyData((DefaultTableModel) this.homeTable.getModel());
        } catch (IOException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.clearData();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // It is the ActionEvent for Open button
       
        // It is a FileChooser Class
        FileDialog dialog = new FileDialog((Frame)null, "Select File to Open");
        dialog.setMode(FileDialog.LOAD);
        
        dialog.setDirectory("DataFile");
        dialog.setFile("CAD_IS.xls");
        dialog.setVisible(true);
        String fileName = dialog.getFile();
        String pathIs = dialog.getDirectory()+""+fileName;
        System.out.println(fileName+" "+dialog.getDirectory() + " chosen.");
       
        
        File file = new File(pathIs);
        
        //first check if Desktop is supported by Platform or not
        if(!Desktop.isDesktopSupported()){
            System.out.println("Desktop is not supported");
            return;
        }
        
        Desktop desktop = Desktop.getDesktop();
        
        // Opens the File seleted if the File Exits
        if(file.exists()) try {
            desktop.open(file);
        } catch (IOException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
        
       
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // It is the ActionEvent for Exit button
        this.dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // It is the ActionEvent for About button
        this.animateMe(panel6, homeLabel5);
       
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // It is the ActionEvent for Help button 
         this.animateMe(panel5, homeLabel4);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try{
            int row = homeTable.getSelectedRow();
            String value = homeTable.getModel().getValueAt(row, 0).toString();
            int gotId = Integer.parseInt(value);
            value = model().getValueAt(row, 4).toString();

            Double nprice = Double.valueOf(value);
            new EditPanel(gotId, model().getValueAt(row, 1).toString()
            ,model().getValueAt(row, 2).toString()
            ,model().getValueAt(row, 3).toString()
            ,nprice
            ,model().getValueAt(row, 5).toString()
            ).setVisible(true);
            
        }catch(Exception e){
                
            JOptionPane.showMessageDialog(null, "Please select a row to be Edited!!");
                
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void catoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            // TODO add your handling code here:

            this.refreshMyData(this.model());
        } catch (IOException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed
    
    public void AddDataToDataFile(int ID,String path){
        /*
            It takes id of the accessory and the path of the file where the data file is stored of to be stored. 
            It initially checks whether the file already exits or not.  
            With the help of other methods it helps in adding data to the Data File.
        */
        try{
                    String catogory = cato.getSelectedItem().toString();
                    String AC_name = name.getText();
                    String Ac_range = this.groupRadioSelection1.toString();
                    String Ac_reco = this.groupRadioSelection2.toString();
                 
                    // Exceptions handlers for null data or wrong data input
                    if (name.getText().isEmpty()){
                        JOptionPane.showMessageDialog(null, "Accessory Name cannot be left Empty.");

                    }else if(Ac_range ==""){
                        JOptionPane.showMessageDialog(null, "Range of Accessory is not Chosen");
                    }else if(Ac_reco ==""){
                        JOptionPane.showMessageDialog(null, "Recomendation of Accessory is not Chosen");
                    }else if(catogory.contains("<Select Category>")){
                        JOptionPane.showMessageDialog(null, "Please Select Category");
                    }else{

                        Double Ac_price = Double.parseDouble(price.getText());

                        File file = new File(path);

                        if(!file.exists()){ 
                            this.createExcel(ID,path);  //creating the file as the file is not present
                            this.inserData(ID, catogory, AC_name, Ac_range, Ac_price, Ac_reco, path);

                        }else{ // Simply inserting data as file already Exists!!
                            this.inserData(ID, catogory, AC_name, Ac_range, Ac_price, Ac_reco, path);
                        }
                    }

                }catch(Exception NumberFormatException){

                    JOptionPane.showMessageDialog(null, "Price cannot hold a String Value");

                }
    }
    
    public void animateMe(JPanel panel, JLabel label){
        /* 
           
            It takes JPanel and JLabel and makes the panel visible and using animation Class, 
            it creates Animation.
            The JPanel other than passed as argument are hide in this method.
        */
        panel1.setVisible(false);
        panel2.setVisible(false);
        panel3.setVisible(false);
        panel4.setVisible(false);
        panel5.setVisible(false);
        panel6.setVisible(false);
        panel.setVisible(true);
        
        AnimationClass Ac = new AnimationClass(); //Code For animation
            Ac.jLabelYDown(-60, 60, 10, 2, label);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel5);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel4);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel1);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel2);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel3);
            Ac.jLabelYUp(60, -60, 10, 2, homeLabel);
        
        
    }
    public void searchByCategory() throws IOException, BiffException{
        /* 
            Code for Searching the Data on the basis of Category!!
        
        */
         // get Data to Constructor(TableData) to make Object Collection
        ArrayList<TableData> data=this.refreshMyData((DefaultTableModel) searchTable.getModel());
        ArrayList<Integer> getItemsIndex = new ArrayList(); // For Storing the Index where the Maeched data are found
        boolean got = false;
        
        DefaultTableModel dtm = (DefaultTableModel) searchTable.getModel();
        dtm.setRowCount(0);   //creating data from table at search section
        String getSelectedItem = this.categorySearch.getSelectedItem().toString().trim();
        
        for (int i=0;i<data.size();i++){  //Linear Search for Category
            if (getSelectedItem.contentEquals(data.get(i).getAc_Category()) ){
                got=true;
                getItemsIndex.add(i);
                
                //Adding the matched Data to the Table
                this.AddDataToTable(data.get(i).getAc_ID(),
                                data.get(i).getAc_Category(),
                                data.get(i).getAc_Name(),
                                data.get(i).getRange(),
                                data.get(i).getAc_Price(),
                                data.get(i).getAc_Recomendation(),
                                dtm);
              
            }else{
                
                got=false;
            }
        }
        if (got=true){
                    //Displaying Data to JOptionPane if the Suitable Data is found
                    Object[][] rows = {
                             {"ID ", data.get(getItemsIndex.get(0)).getAc_ID() }
                            ,{"Category ", data.get(getItemsIndex.get(0)).getAc_Category() }
                            ,{"Name ", data.get(getItemsIndex.get(0)).getAc_Name() }
                            ,{"Range ", data.get(getItemsIndex.get(0)).getRange() }
                            ,{"Price ", data.get(getItemsIndex.get(0)).getAc_Price() }
                            ,{"Recomendation ", data.get(getItemsIndex.get(0)).getAc_Recomendation() }
                        };

                    JOptionPane.showMessageDialog(null,this.tableForJOptionPane(rows));// addng table to JOptionPanel
        
        }
    }
    public JPanel tableForJOptionPane(Object[][] rows){
          /* 
            The first searched output data is stored in a form of table by passing the object into this method. 
            This method takes the data and store it into a table. 
            Then it returns JPanel by adding table into it.
        
        */
        
        Object[] cols = {
            "Type","Vaules"
        };
            JTable table = new JTable(rows, cols);
            this.decorateMyTables(table); //Decorates table
            JLabel label = new JLabel("Accessory Found");
            table.setRowHeight(25);
            
            JPanel jpanel = new JPanel();
            JPanel jpanel1 = new JPanel();
            jpanel1.add(label);
            JScrollPane j = new JScrollPane(table);
            jpanel.add(jpanel1);
            jpanel.add(j);
            
            j.setPreferredSize(new Dimension(300,180));
        
        return jpanel;
    }
    public void searchByPrice() throws IOException, BiffException{
        /* 
            Code for Searching the Data on the basis of Price!!
        
        */
        int key = 0;
        ArrayList<TableData> data; 
        int getBinarySearchData;
        DefaultTableModel dtm = (DefaultTableModel) searchTable.getModel();
        
        data=this.refreshMyData((DefaultTableModel) searchTable.getModel());
        
        if (this.priceSearch.getText().isEmpty()){ //Checks if the texfield is empty or not
            JOptionPane.showMessageDialog(null, "Textfield cannot be Empty!!");
        }else{
                
                int arr[] = new int[data.size()];
                 
                for(int i =0;i<data.size();i++){
                    arr[i]=(int) data.get(i).getAc_Price();  //gets the sorted data on the basis of price and sotre to array
                   
                    
                }
            
                
                CAD_info ob = new CAD_info(); // Creating Object of CAD_Info class
                try{
                    key =Integer.parseInt(this.priceSearch.getText());
                    int low = 0;
                    int high = arr.length-1;
                    getBinarySearchData = ob.binarySearch(arr, low, high, key); //gets the matched value from binarySerch
                    int result = getBinarySearchData;
                    dtm.setRowCount(0);   //Clears the Search Table

                    if (result == -1) {    //Checks if the match is found or not
                        JOptionPane.showMessageDialog(InventoryPanel, "    Accessoy not Found \n Number Of data Checked:"+arr.length);

                    }else{
                        

                        for (int i = 0;i<data.size();i++){  //linear search to store all possible data to table
                            if (data.get(i).getAc_Price()==Double.parseDouble(this.priceSearch.getText())){
                                
                                this.AddDataToTable(data.get(i).getAc_ID(),
                                        data.get(i).getAc_Category(),
                                        data.get(i).getAc_Name(),
                                        data.get(i).getRange(),
                                        data.get(i).getAc_Price(),
                                        data.get(i).getAc_Recomendation(),
                                        dtm);

                            }

                        }
                        //data Obtainded from Binary Ssearch is Displayed at JOptionPane
                        Object[][] rows = { 
                             {"ID ", data.get(result).getAc_ID() }
                            ,{"Category ", data.get(result).getAc_Category() }
                            ,{"Name ", data.get(result).getAc_Name() }
                            ,{"Range ", data.get(result).getRange() }
                            ,{"Price ", data.get(result).getAc_Price() }
                            ,{"Recomendation ", data.get(result).getAc_Recomendation() }
                        };

                        JOptionPane.showMessageDialog(null,this.tableForJOptionPane(rows)); //Adds table to JOptionPane
                      

                    }
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(InventoryPanel, "Please Enter a Numeric value!!");
                    }

            
        }
       

    }

    
    public void AddDataToTable(int id,String cato, String name, String range, double price,String reco,DefaultTableModel dtm){
        /* Code for Inserting data into the JTable
        
        */
      
        Object[] item={id,   //craeting array of the data
            cato,
            name,
            range,
            price,
            reco  
        };
        
        dtm.addRow(item); //adding array to row of the Table
        homeTable.setModel(dtm);
        DefaultTableCellRenderer rendar = new DefaultTableCellRenderer();
        rendar.setHorizontalAlignment(jLabel1.CENTER);
        for(int i = 0;i<dtm.getColumnCount();i++){
            homeTable.getColumnModel().getColumn(i).setCellRenderer(rendar);
            searchTable.getColumnModel().getColumn(i).setCellRenderer(rendar);
        }
        
    }
    public DefaultTableModel model(){
        //returns the model of the table 
        DefaultTableModel model = (DefaultTableModel) homeTable.getModel();
        return model;
    }
 
    public ArrayList refreshMyData(DefaultTableModel dtm) throws IOException, BiffException{
        
        /* Code for Refreshing the Data in any table used!!
        
        */
        dtm.setRowCount(0);
        ArrayList<TableData> k=new ArrayList(); 
        
        Workbook wb = null;
        File f;
        try {
            f = new File("..//DataFile\\CAD_IS.xls"); //used for searching the file at possible paths
            wb = Workbook.getWorkbook(f);
        } catch (IOException ex) {
            f = new File("DataFile\\CAD_IS.xls"); //used for searching the file at possible paths
            wb = Workbook.getWorkbook(f);
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BiffException ex) {
            
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        
        }
        
        
        Sheet s  = wb.getSheet(0);
        ArrayList data;
        int row = s.getRows();
        int col = s.getColumns();
        
        for(int i =1;i<row; i++){
            data  = new ArrayList();
            for(int j = 0;j<col;j++){
                Cell c = s.getCell(j,i);
                data.add(c.getContents()); 
            }
            
            // Adding data to Table by passing Arguments
            this.AddDataToTable(Integer.parseInt(data.get(0).toString()) // Adding data to Table by passing Arguments
                        , data.get(1).toString()
                        , data.get(2).toString()
                        , data.get(3).toString()
                        , Double.parseDouble(data.get(4).toString())
                        , data.get(5).toString()
                        , dtm);
            // Adding data to Contructor(TableData) by passing Arguments to create Object
           k.add(new TableData(Integer.parseInt(data.get(0).toString()) 
                        , data.get(1).toString()
                        , data.get(2).toString()
                        , data.get(3).toString()
                        , Double.parseDouble(data.get(4).toString())
                        , data.get(5).toString()));
       
        }
               Collections.sort(k, Comparator.comparingDouble(TableData::getAc_Price)); //Sorting the ObjectData On the basis of Price
    return k;
       
    }
    public ArrayList homeTableData(){  
        /* Code for geting the quntity of each category of the Accessories
            this data is used to plot a Bar diagram
        
        */
        ArrayList categoryQuantity = new ArrayList();
        DefaultTableModel dtm=(DefaultTableModel) homeTable.getModel();
        int c1=0,c2=0,c3=0,c4=0,c5=0,c6=0;
        for (int i = 0;i<dtm.getRowCount();i++){
            
            String category = dtm.getValueAt(i, 1).toString();
            
            if(category.matches("Media")){
                c1=c1+1;
            }else if(category.matches("Comfort")){
                c2=c2+1;
            }else if(category.matches("Decorative")){
                c3=c3+1;
            }else if(category.matches("Cleaning")){
                c4=c4+1;
            }else if(category.matches("Oils & Lubricants")){
                c5=c5+1;
                
            }else if(category.matches("Others"))
                c6 = c6+1;
        }
        categoryQuantity.add(c1);
        categoryQuantity.add(c2);
        categoryQuantity.add(c3);
        categoryQuantity.add(c4);
        categoryQuantity.add(c5);
        categoryQuantity.add(c6);
        
        return categoryQuantity;
    }
    public void inserData(int id,String cato, String name, String range,Double price, String reco, String path) throws BiffException{
       /* Code for Inserting data into the Datafile(workbook)!!
        
        */
        try { 
                
                Workbook wb = Workbook.getWorkbook(new File(path));
                
                WritableWorkbook myexcel = Workbook.createWorkbook(new File(path),wb);
                
                WritableSheet mysheet = myexcel.getSheet(0);
                int row = mysheet.getRows();
                // adding data to labels
                Label l1 = new Label(0,row,String.valueOf(id));
                Label l2 = new Label(1,row,cato);
                Label l3 = new Label(2,row,name);
                Label l4 = new Label(3,row,range);
                Label l5 = new Label(4,row,String.valueOf(price));
                Label l6 = new Label(5,row,reco);
                
                //adding labels to the Cells in Workbook
                mysheet.addCell(l1);
                mysheet.addCell(l2);
                mysheet.addCell(l3);
                mysheet.addCell(l4);
                mysheet.addCell(l5);
                mysheet.addCell(l6);
                
                myexcel.write();
                myexcel.close();
                
                this.clearData(); // Call for clearing data from the form!!
                
                JOptionPane.showMessageDialog(null, " Data Added Successfully!!");

                } catch (IOException ex) {
                    Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
                } catch (WriteException ex) {
                    Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
                }
       
    }
    public void clearData(){  //Code for clearing data from the froms
        this.id.setText("");
        this.cato.setSelectedIndex(0);
        this.name.setText("");

        this.price.setText("");
        this.buttonGroup1.clearSelection();
        this.buttonGroup2.clearSelection();
    }
    public void createExcel(int ID,String path){  //Code for Creating a workbook in the workbook is not present!!
        /*
        It creates a excel workbook to the specified path.
        It also handle the exception if the specified path is not valid.
        */
            
        try {
            WritableWorkbook workbook = Workbook.createWorkbook(new File(path)); // creating Object of WritableWorkbook
            workbook.createSheet("CAD_IS", 0);  
            workbook.write();
            workbook.close();
        } catch (IOException ex) { // try for another path
            this.AddDataToDataFile(ID, "..\\DataFile//CAD_IS.xls");
            
        } catch (WriteException ex) {
            Logger.getLogger(First_Interface.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        
    }
    public void decorateMyTables(JTable table){  //Code for Decoratin the Tables used
        
        this.setLocationRelativeTo(this);
        table.getTableHeader().setFont(new Font("Segne UI", Font.BOLD,14));
        table.getTableHeader().setOpaque(false);
        table.getTableHeader().setBackground(new Color(32,136,203));
        table.getTableHeader().setForeground(Color.white);
        table.setRowHeight(25);
        
    }
    public void selection(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("car.png")));
    }
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KGradientPanel InventoryPanel;
    private javax.swing.JRadioButton bg1;
    private javax.swing.JRadioButton bg2;
    private javax.swing.JRadioButton bg3;
    private javax.swing.JRadioButton bg4;
    private javax.swing.JRadioButton bg5;
    private javax.swing.JRadioButton bg6;
    private keeptoo.KButton btnMenu;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox categorySearch;
    private javax.swing.JComboBox cato;
    private javax.swing.JLabel dash;
    private javax.swing.JPanel enclosedPanel;
    private javax.swing.JPanel enclosedPanel1;
    private javax.swing.JPanel enclosedPanel2;
    private javax.swing.JPanel enclosedPanel4;
    private javax.swing.JPanel enclosedPanel5;
    private javax.swing.JPanel enclosedPanel7;
    private javax.swing.JLabel hidePanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JLabel homeLabel1;
    private javax.swing.JLabel homeLabel2;
    private javax.swing.JLabel homeLabel3;
    private javax.swing.JLabel homeLabel4;
    private javax.swing.JLabel homeLabel5;
    private javax.swing.JTable homeTable;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel10;
    private keeptoo.KGradientPanel kGradientPanel11;
    private keeptoo.KGradientPanel kGradientPanel13;
    private keeptoo.KGradientPanel kGradientPanel14;
    private keeptoo.KGradientPanel kGradientPanel16;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel5;
    private keeptoo.KGradientPanel kGradientPanel8;
    private keeptoo.KGradientPanel kGradientPanel9;
    private javax.swing.JLabel l1;
    private javax.swing.JTextField name;
    private keeptoo.KButton p1;
    private keeptoo.KButton p2;
    private keeptoo.KButton p3;
    private keeptoo.KButton p4;
    private keeptoo.KButton p5;
    private keeptoo.KButton p6;
    private keeptoo.KButton p7;
    private javax.swing.JPanel panel1;
    private javax.swing.JPanel panel2;
    private javax.swing.JPanel panel3;
    private javax.swing.JPanel panel4;
    private javax.swing.JPanel panel5;
    private javax.swing.JPanel panel6;
    private javax.swing.JPanel plnMenu;
    private javax.swing.JTextField price;
    private javax.swing.JTextField priceSearch;
    private javax.swing.JSeparator s1;
    private javax.swing.JComboBox searchCombo;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JTable searchTable;
    // End of variables declaration//GEN-END:variables

   
}
